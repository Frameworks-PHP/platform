{{#error_message}}
    <div class="cm-error cm-{{element_type}}-error">
        {{error_message}}
    </div>
{{/error_message}}

<h2>{{plan_name}}Cash Music Payment plan</h2>
<p>{{plan_description}}$99 Suggested price per year</p>

  {{#flexible_price}}
        <label class="cm-subscribe cm-add-amount">Adjust your payment amount:</label>
        <input class="cm-subscribe-input" type="number" min="{{plan_price}}" name="plan_amount" id="plan_flexible_price" value="{{plan_price}}" autocomplete="off" >
  {{/flexible_price}}
<a href="#" class="cm-subscribe button" data-price="{{plan_price}}" data-plan-id="{{plan_id}}" id="subscribe">$<span class="amount" id="plan_price">{{plan_price}}</span>/{{plan_interval}} - Subscribe</a>

<script type="text/javascript">
(function() {
    'use strict';
    var cm = window.cashmusic;

    // get stripe public key
    {{#stripe_public_key}}
        var stripe_public_key = "{{stripe_public_key}}";
    {{/stripe_public_key}}
    {{^stripe_public_key}}
        var stripe_public_key = false;
    {{/stripe_public_key}}

    // set shipping true, or to false if there is no shipping
    var shipping = {{shipping}};
    console.log(shipping);

    console.log("there is shipping")
    cm.events.add(cm,'ready', function(e) {
        cm.session.start();
        var plan_price = document.getElementById('plan_price');
        var subscribe_button = document.querySelector('.cm-subscribe');
        var flexible_price = document.getElementById('plan_flexible_price');

        if (flexible_price) {
            flexible_price.addEventListener('keyup', function() {
                var price = (flexible_price.value != "") ? flexible_price.value : "10.00";
                plan_price.innerHTML = price;

                subscribe_button.setAttribute("data-price", price);

            }, false);
        }

        if (subscribe_button) {
            // user triggered the subscribe button
            cm.events.add(subscribe_button, 'click', function (e) {
                e.preventDefault();
                e.stopPropagation();

                var price = subscribe_button.getAttribute("data-price");
                var plan_id = subscribe_button.getAttribute("data-plan-id");

                var submitUrl = window.location.href.split('/embed/')[0]+'/payload';

                var poststring = 'cash_request_type=commerce&cash_action=initiatesubscription&element_id={{element_id}}&plan_id={{plan_id}}&price=' + price;

                cm.loadScript(cm.path + '/checkout/checkout.js', function () {
                    cm.checkout.prep();
                    cm.checkout.begin({
                        "stripe": stripe_public_key,
                        "paypal": false,
                        "currency": "usd", // USD = auto default
                        "recurring": true,
                        "shipping": shipping,
                        "total": "{{currency}}" + parseFloat(price)
                    });
                });


                cm.events.add(cm, 'checkoutdata', function (payment) {
                    var f = document.createElement('form');
                    f.method = 'post';
                    f.action = '';

                    var els = ['cash_request_type','cash_action','element_id','price','stripe','origin','email_address','subscription_plan','customer_name','geo', 'shipping_info'];
                    for (var i = 0, len = els.length; i < len; i++) {
                        var inp = document.createElement('input');
                        inp.type = 'hidden';
                        inp.name = els[i];
                        inp.value = '';
                        f.appendChild(inp);
                    }

                    f.cash_request_type.value = 'commerce';
                    f.cash_action.value = 'initiatesubscription';
                            {{#session_id}}f.session_id = '{{session_id}}';{{/session_id}}
                    f.element_id.value = {{element_id}};
                    f.price.value = parseFloat(subscribe_button.getAttribute('data-price'));
                    f.subscription_plan.value = subscribe_button.getAttribute('data-plan-id');
                    f.origin.value = payment.detail.origin;
                    f.email_address.value = payment.detail.email;
                    f.customer_name.value = payment.detail.name;
                    f.geo.value = cm.geo;

                    if (payment.detail.stripe) {
                        f.stripe.value = payment.detail.stripe;
                    }

                    // add shipping to form
                    if (payment.detail.shipping) {
                        f.shipping_info.value = JSON.stringify(payment.detail.shipping);

                    }

                    initiatePayment(f);
                });

                /*cm.loadScript(cm.path + '/checkout/checkout.js', function () {
                    cm.checkout.prep();
                });*/
            });
        }

        function initiatePayment(f) {
            document.body.appendChild(f);
            cm.ajax.send(
                    '{{public_url}}/request/payload',
                    cm.ajax.encodeForm(f),
                    function(details) {
                        if (details.substring(0,4) == 'http') {
                            top.location.href = details;
                        } else if (details == 'success') {
                            cm.overlay.reveal({"element":"{{element_id}}","endpoint":"{{public_url}}","state":"success"});
                        } else {
                            cm.overlay.reveal('There was a problem with your payment. Please try again.');
                        }
                    },
                    function(details) {
                        cm.overlay.reveal('There was a problem with your payment. Please try again.');
                    }
            );
        }
        //
    });

}());
</script>

